# 创建部门表
CREATE TABLE dept(
	id INT PRIMARY KEY AUTO_INCREMENT,
	NAME VARCHAR(20)
);
INSERT INTO dept (NAME) VALUES ('开发部'),('市场部'),('财务部');
# 创建员工表
CREATE TABLE emp (
	id INT PRIMARY KEY AUTO_INCREMENT,
	NAME VARCHAR(10),
	gender CHAR(1), -- 性别
	salary DOUBLE, -- 工资
	join_date DATE, -- 入职日期
	dept_id INT,
	FOREIGN KEY (dept_id) REFERENCES dept(id) -- 外键，关联部门表(部门表的主键)
);
INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES('孙悟空','男',7200,'2013-02-24',1);
INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES('猪八戒','男',3600,'2010-12-02',2);
INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES('唐僧','男',9000,'2008-08-08',2);
INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES('白骨精','女',5000,'2015-10-07',3);
INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES('蜘蛛精','女',4500,'2011-03-14',1);

SELECT * FROM dept;
SELECT * FROM emp;
SELECT * FROM emp,dept;

# 内连接
--  隐式内连接，使用where条件消除无用数据
SELECT * FROM emp,dept WHERE emp.`dept_id` = dept.`id`;
--  显式内连接， select 字段列表 from 表名1 [inner] join 表名2 on 条件
SELECT * FROM emp INNER JOIN dept ON emp.`dept_id` = dept.`id`;
SELECT * FROM emp JOIN dept ON emp.`dept_id` = dept.`id`;

# 外连接
-- 如果新添加了一个员工，但是没有添加dep_id字段，则用内连接查不出来
-- 查询所有员工信息，如果员工有部门，则查询部门名称，没有部门，则不显示部门名称
-- 左外连接
SELECT t1.*,t2.`NAME` FROM emp t1 LEFT JOIN dept t2 ON t1.`dept_id` = t2.`id`
-- 右外连接
SELECT t2.*,t1.`NAME` FROM dept t1 RIGHT JOIN emp t2 ON t2.`dept_id` = t1.`id`

# 子查询

-- 查询工资最高的员工信息
SELECT MAX(salary) FROM emp;
SELECT * FROM emp,dept WHERE emp.salary = (SELECT MAX(salary) FROM emp) AND emp.`dept_id` = dept.`id`; -- 显示内连接
SELECT * FROM emp INNER JOIN  dept ON emp.salary = (SELECT MAX(salary) FROM emp) AND emp.`dept_id` = dept.`id`; -- 隐式内连接


-- 子查询的结果是单行单列的,子查询可以作为条件，使用运算符去判断。 运算符： > >= < <= =
-- 查询员工工资小于平均工资的人的emp信息
SELECT AVG(salary) FROM emp;
SELECT * FROM emp,dept WHERE emp.`salary`<(SELECT AVG(salary) FROM emp) AND emp.`dept_id` = dept.`id`;-- 不行， 注意，这里没有小白龙的数据，需要用到外连接
SELECT * FROM emp LEFT JOIN dept ON  emp.`dept_id` = dept.`id` AND emp.`salary`<6000;-- 不行
SELECT * FROM emp WHERE emp.`salary`<(SELECT AVG(salary) FROM emp) ;

-- 子查询的结果是多行单列的，使用运算符in来判断
-- 查询'财务部'和'市场部'所有的员工信息的emp信息
SELECT * FROM dept WHERE NAME="市场部" OR NAME = "财务部";
SELECT * FROM emp WHERE dept_id IN(2,3)
SELECT * FROM emp WHERE dept_id IN(SELECT id FROM dept WHERE NAME="市场部" OR NAME = "财务部");


-- 子查询的结果是多行多列的：子查询可以作为一张虚拟表参与查询
-- 查询员工入职日期是2011-11-11日之后的员工信息和部门信息

SELECT * FROM emp WHERE join_date > "2011-11-11";
SELECT	* FROM (SELECT * FROM emp WHERE emp.`join_date` > '2011-11-11') t1,dept t2 WHERE t1.join_date = t2.`id`;-- 为什么这样写不行？？
SELECT	* FROM dept t1,(SELECT * FROM emp WHERE emp.`join_date` > '2011-11-11') t2 WHERE t1.`id` = t2.dept_id;




